Sarah Wood
SQL

Assignment #12


1. 

INSERT INTO INSTRUCTOR
(INSTRUCTOR_ID, SALUTATION, FIRST_NAME, LAST_NAME, STREET_ADDRESS, ZIP, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE)
VALUES ('815', 'Mr', 'John', 'Locke', '2342 Oceanic Way', '07002', USER, SYSDATE, USER, SYSDATE);

2. 

INSERT INTO SECTION
(SECTION_ID, COURSE_NO, SECTION_NO, START_DATE_TIME, LOCATION, INSTRUCTOR_ID, CAPACITY, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE)
VALUES (48, 142, 4, TO_DATE('22-SEP-2011 8:15 AM', 'DD-MON-YYYY HH:MI AM'), 'L211', 815, 15, USER, SYSDATE, USER, SYSDATE);

3. 

INSERT ALL
INTO ENROLLMENT (STUDENT_ID, SECTION_ID, ENROLL_DATE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE)
VALUES (137, 48, SYSDATE, USER, SYSDATE, USER, SYSDATE)
INTO ENROLLMENT (STUDENT_ID, SECTION_ID, ENROLL_DATE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE)
VALUES (266, 48, SYSDATE, USER, SYSDATE, USER, SYSDATE)
INTO ENROLLMENT (STUDENT_ID, SECTION_ID, ENROLL_DATE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE)
VALUES (375, 48, SYSDATE, USER, SYSDATE, USER, SYSDATE)
INTO ENROLLMENT (STUDENT_ID, SECTION_ID, ENROLL_DATE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE)
VALUES (382, 48, SYSDATE, USER, SYSDATE, USER, SYSDATE)

SELECT *
FROM DUAL;

4. 

DELETE FROM GRADE
WHERE STUDENT_ID = 147
AND SECTION_ID = 120;

DELETE FROM ENROLLMENT
WHERE STUDENT_ID = 147
AND SECTION_ID = 120;


5. 

DELETE FROM GRADE
WHERE STUDENT_ID = 180
AND SECTION_ID = 119;

DELETE FROM ENROLLMENT
WHERE STUDENT_ID = 180
AND SECTION_ID = 119;

6. 

UPDATE INSTRUCTOR
SET PHONE = 4815162342
WHERE INSTRUCTOR_ID = 815;

7. 

UPDATE GRADE
SET NUMERIC_GRADE = 100
WHERE SECTION_ID = 119
AND GRADE_TYPE_CODE = 'HM'
AND GRADE_CODE_OCCURRENCE = 1;

8. 

UPDATE GRADE
SET NUMERIC_GRADE = 
  CASE WHEN NUMERIC_GRADE < 100 THEN
  NUMERIC_GRADE + NUMERIC_GRADE * 0.10
END

WHERE SECTION_ID = 119
AND GRADE_TYPE_CODE = 'FI';

9. 

SELECT SCT.SECTION_ID, SCT.LOCATION, COUNT(E.STUDENT_ID) AS "No Enrolled"
FROM ENROLLMENT E, SECTION SCT, COURSE C
WHERE SCT.COURSE_NO = C.COURSE_NO
AND SCT.SECTION_ID = E.SECTION_ID(+)
AND C.DESCRIPTION = 'Project Management'
GROUP BY SCT.SECTION_ID, SCT.LOCATION
ORDER BY SCT.SECTION_ID;

10. 

SELECT I.FIRST_NAME || ' ' || I.LAST_NAME AS "Name", SUBSTR(I.PHONE, 1, 3) ||'-'||SUBSTR(I.PHONE, 4, 3)||'-'||SUBSTR(I.PHONE, 7, 4) AS "Phone"
FROM INSTRUCTOR I, SECTION SCT, COURSE C
WHERE C.COURSE_NO = SCT.COURSE_NO
AND I.INSTRUCTOR_ID = SCT.INSTRUCTOR_ID
AND C.DESCRIPTION = 'Project Management'
ORDER BY LAST_NAME;

11. 

SELECT ST.FIRST_NAME || ' ' || ST.LAST_NAME AS "Name", ST.STUDENT_ID AS "Student ID", ROUND(AVG(G.NUMERIC_GRADE), 2) AS "Grade Average"
FROM GRADE G, STUDENT ST
WHERE G.SECTION_ID = 119
AND ST.STUDENT_ID = G.STUDENT_ID
GROUP BY ST.STUDENT_ID, ST.FIRST_NAME, ST.LAST_NAME
ORDER BY ST.STUDENT_ID;

12. 

SELECT COUNT(INSTRUCTOR_ID) AS "SECTIONS WITH >3 IN L211"
FROM INSTRUCTOR
WHERE INSTRUCTOR_ID IN
(SELECT SCT.INSTRUCTOR_ID
FROM ENROLLMENT E, SECTION SCT
WHERE E.SECTION_ID = SCT.SECTION_ID
AND SCT.LOCATION = 'L211'
HAVING COUNT(E.STUDENT_ID) > 3
GROUP BY SCT.INSTRUCTOR_ID);

13.  

SELECT I.SALUTATION || '. ' || I.FIRST_NAME || ' ' || I.LAST_NAME AS "Name", SUBSTR(I.PHONE, 1, 3) ||'-'||SUBSTR(I.PHONE, 4, 3)||'-'||SUBSTR(I.PHONE, 7, 4) AS "Phone"
FROM SECTION SCT, INSTRUCTOR I
WHERE I.INSTRUCTOR_ID = SCT.INSTRUCTOR_ID
AND SCT.COURSE_NO = 142
AND SCT.INSTRUCTOR_ID IN
(SELECT INSTRUCTOR_ID
FROM SECTION
HAVING COUNT(SECTION_ID) = 1
GROUP BY INSTRUCTOR_ID)
ORDER BY I.LAST_NAME;

14. 

SELECT ST.FIRST_NAME||' '|| ST.LAST_NAME AS "Name", SCT.SECTION_ID, SCT.COURSE_NO
FROM ENROLLMENT E, STUDENT ST, SECTION SCT, GRADE G
WHERE ST.STUDENT_ID = E.STUDENT_ID
AND E.SECTION_ID = SCT.SECTION_ID
AND E.SECTION_ID = G.SECTION_ID(+)
AND ST.STUDENT_ID  IN
(SELECT STUDENT_ID
FROM ENROLLMENT)
AND ST.STUDENT_ID NOT IN
(SELECT STUDENT_ID
FROM GRADE);





15.  

SELECT DISTINCT TO_CHAR(START_DATE_TIME, 'HH:MI AM') AS "Start Time",  COUNT(DISTINCT COURSE_NO) AS "Course Count"
FROM  SECTION
GROUP BY TO_CHAR(START_DATE_TIME, 'HH:MI AM')
ORDER BY TO_CHAR(START_DATE_TIME, 'HH:MI AM');

